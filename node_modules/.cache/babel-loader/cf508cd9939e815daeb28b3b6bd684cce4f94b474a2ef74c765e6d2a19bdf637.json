{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JORDAN\\\\Desktop\\\\mql4traderai\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([{\n    role: 'system',\n    content: `You are an MQL4 coding expert helping the user build a complete Expert Advisor (.mq4). The user will describe a trading strategy or problem, and your job is to output clean, working code and assist them until the EA is complete.\n\nInstructions:\n- Include OnInit(), OnDeinit(), and OnTick()\n- Include risk management and code comments\n- If there's a known issue (like OrderSend error 130), explain how to fix it\n- Provide clear explanations **above** the code, and output the EA code in plain text without markdown or triple backticks\n- Support the user across multiple follow-ups — revise, debug, and improve until it’s ready to go\n`\n  }]);\n  const [userInput, setUserInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [copySuccess, setCopySuccess] = useState('');\n  const sendMessage = async (customInput = null) => {\n    const input = customInput !== null ? customInput : userInput;\n    if (!input.trim()) return;\n    setLoading(true);\n    setError('');\n    const updatedMessages = [...messages, {\n      role: 'user',\n      content: input\n    }];\n    setUserInput('');\n    try {\n      const res = await fetch('http://localhost:4000/api/generate-ea', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          messages: updatedMessages\n        })\n      });\n      const data = await res.json();\n      if (data.error) {\n        setError(data.error);\n      } else {\n        const assistantMsg = {\n          role: 'assistant',\n          content: data.eaCode\n        };\n        const updatedAllMessages = [...updatedMessages, assistantMsg];\n        setMessages(updatedAllMessages);\n      }\n    } catch (err) {\n      setError('Something went wrong.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const resetSession = () => {\n    setMessages([{\n      role: 'system',\n      content: `You are an MQL4 coding expert helping the user build a complete Expert Advisor (.mq4). The user will describe a trading strategy or problem, and your job is to output clean, working code and assist them until the EA is complete.\n\nInstructions:\n- Include OnInit(), OnDeinit(), and OnTick()\n- Include risk management and code comments\n- If there's a known issue (like OrderSend error 130), explain how to fix it\n- Provide clear explanations **above** the code, and output the EA code in plain text without markdown or triple backticks\n- Support the user across multiple follow-ups — revise, debug, and improve until it’s ready to go\n`\n    }]);\n    setUserInput('');\n    setError('');\n  };\n  const downloadCode = () => {\n    const lastAssistant = messages.findLast(msg => msg.role === 'assistant');\n    if (!lastAssistant) return;\n    const blob = new Blob([lastAssistant.content], {\n      type: 'text/plain'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'MyExpertAdvisor.mq4';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  const lastAssistant = messages.findLast(msg => msg.role === 'assistant');\n  const copyCodeToClipboard = () => {\n    if (!(lastAssistant !== null && lastAssistant !== void 0 && lastAssistant.content)) return;\n    navigator.clipboard.writeText(lastAssistant.content).then(() => {\n      setCopySuccess('Copied!');\n      setTimeout(() => setCopySuccess(''), 1500);\n    }).catch(err => {\n      console.error('Failed to copy code:', err);\n      setCopySuccess('Failed to copy');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: '#fff',\n      color: '#000',\n      padding: 20,\n      fontFamily: 'monospace'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MQL4TraderAI EA Builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: '#eef',\n        padding: 15,\n        marginBottom: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCA1 Tips for Best Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Describe your EA logic step-by-step. Mention entries, exits, indicators, and timeframe.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Say if it's for scalping, swing trading, news filtering, etc.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"If using indicators (e.g. RSI, MACD), include parameters.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"If there's an error in the compiler or strategy tester (like \\\"OrderSend Error 130\\\"), copy the error into the chat \\u2014 the AI will help fix it.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Remember, MQL4TraderAI is not perfect and can make mistakes. Please be patient and work with AI back and forth to get the best results. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: userInput,\n      onChange: e => setUserInput(e.target.value),\n      rows: 4,\n      placeholder: \"Describe your EA strategy or request help with your existing code...\",\n      style: {\n        width: '100%',\n        padding: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => sendMessage(),\n        disabled: loading,\n        children: loading ? 'Thinking...' : 'Generate EA code'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetSession,\n        style: {\n          marginLeft: 10\n        },\n        children: \"Reset Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: downloadCode,\n        style: {\n          marginLeft: 10\n        },\n        disabled: !lastAssistant,\n        children: \"Download MQ4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginTop: 20\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }, this), lastAssistant && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: copyCodeToClipboard,\n        children: \"Copy Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), copySuccess && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginLeft: 10,\n          color: 'green'\n        },\n        children: copySuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          padding: 15,\n          background: '#fff',\n          color: '#000',\n          whiteSpace: 'pre-wrap',\n          border: '1px solid #ccc',\n          marginTop: 10\n        },\n        children: lastAssistant.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qG06A4gsMmjXlXkMxs++uJUF7M4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","messages","setMessages","role","content","userInput","setUserInput","loading","setLoading","error","setError","copySuccess","setCopySuccess","sendMessage","customInput","input","trim","updatedMessages","res","fetch","method","headers","body","JSON","stringify","data","json","assistantMsg","eaCode","updatedAllMessages","err","resetSession","downloadCode","lastAssistant","findLast","msg","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","appendChild","click","removeChild","copyCodeToClipboard","navigator","clipboard","writeText","then","setTimeout","catch","console","style","background","color","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","value","onChange","e","target","rows","placeholder","width","marginTop","onClick","disabled","marginLeft","whiteSpace","border","_c","$RefreshReg$"],"sources":["C:/Users/JORDAN/Desktop/mql4traderai/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [messages, setMessages] = useState([\n    {\n      role: 'system',\n      content: `You are an MQL4 coding expert helping the user build a complete Expert Advisor (.mq4). The user will describe a trading strategy or problem, and your job is to output clean, working code and assist them until the EA is complete.\n\nInstructions:\n- Include OnInit(), OnDeinit(), and OnTick()\n- Include risk management and code comments\n- If there's a known issue (like OrderSend error 130), explain how to fix it\n- Provide clear explanations **above** the code, and output the EA code in plain text without markdown or triple backticks\n- Support the user across multiple follow-ups — revise, debug, and improve until it’s ready to go\n`\n    }\n  ]);\n\n  const [userInput, setUserInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [copySuccess, setCopySuccess] = useState('');\n\n  const sendMessage = async (customInput = null) => {\n    const input = customInput !== null ? customInput : userInput;\n    if (!input.trim()) return;\n    setLoading(true);\n    setError('');\n\n    const updatedMessages = [...messages, { role: 'user', content: input }];\n    setUserInput('');\n\n    try {\n      const res = await fetch('http://localhost:4000/api/generate-ea', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ messages: updatedMessages })\n      });\n\n      const data = await res.json();\n\n      if (data.error) {\n        setError(data.error);\n      } else {\n        const assistantMsg = { role: 'assistant', content: data.eaCode };\n        const updatedAllMessages = [...updatedMessages, assistantMsg];\n        setMessages(updatedAllMessages);\n      }\n    } catch (err) {\n      setError('Something went wrong.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const resetSession = () => {\n    setMessages([\n      {\n        role: 'system',\n        content: `You are an MQL4 coding expert helping the user build a complete Expert Advisor (.mq4). The user will describe a trading strategy or problem, and your job is to output clean, working code and assist them until the EA is complete.\n\nInstructions:\n- Include OnInit(), OnDeinit(), and OnTick()\n- Include risk management and code comments\n- If there's a known issue (like OrderSend error 130), explain how to fix it\n- Provide clear explanations **above** the code, and output the EA code in plain text without markdown or triple backticks\n- Support the user across multiple follow-ups — revise, debug, and improve until it’s ready to go\n`\n      }\n    ]);\n    setUserInput('');\n    setError('');\n  };\n\n  const downloadCode = () => {\n    const lastAssistant = messages.findLast(msg => msg.role === 'assistant');\n    if (!lastAssistant) return;\n    const blob = new Blob([lastAssistant.content], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'MyExpertAdvisor.mq4';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const lastAssistant = messages.findLast(msg => msg.role === 'assistant');\n\n  const copyCodeToClipboard = () => {\n    if (!lastAssistant?.content) return;\n\n    navigator.clipboard.writeText(lastAssistant.content)\n      .then(() => {\n        setCopySuccess('Copied!');\n        setTimeout(() => setCopySuccess(''), 1500);\n      })\n      .catch(err => {\n        console.error('Failed to copy code:', err);\n        setCopySuccess('Failed to copy');\n      });\n  };\n\n  return (\n    <div style={{ background: '#fff', color: '#000', padding: 20, fontFamily: 'monospace' }}>\n      <h1>MQL4TraderAI EA Builder</h1>\n<div style={{ background: '#eef', padding: 15, marginBottom: 20 }}>\n  <h3>💡 Tips for Best Results</h3>\n  <ul>\n    <li>Describe your EA logic step-by-step. Mention entries, exits, indicators, and timeframe.</li>\n    <li>Say if it's for scalping, swing trading, news filtering, etc.</li>\n    <li>If using indicators (e.g. RSI, MACD), include parameters.</li>\n    <li>If there's an error in the compiler or strategy tester (like \"OrderSend Error 130\"), copy the error into the chat — the AI will help fix it.</li>\n  <li>Remember, MQL4TraderAI is not perfect and can make mistakes. Please be patient and work with AI back and forth to get the best results. </li>\n\n\n</ul>\n</div>\n      <textarea\n        value={userInput}\n        onChange={(e) => setUserInput(e.target.value)}\n        rows={4}\n        placeholder=\"Describe your EA strategy or request help with your existing code...\"\n        style={{ width: '100%', padding: 10 }}\n      ></textarea>\n\n      <div style={{ marginTop: 10 }}>\n        <button onClick={() => sendMessage()} disabled={loading}>\n          {loading ? 'Thinking...' : 'Generate EA code'}\n        </button>\n        <button onClick={resetSession} style={{ marginLeft: 10 }}>\n          Reset Session\n        </button>\n        <button onClick={downloadCode} style={{ marginLeft: 10 }} disabled={!lastAssistant}>\n          Download MQ4\n        </button>\n      </div>\n\n      {error && <div style={{ color: 'red', marginTop: 20 }}>{error}</div>}\n\n      {lastAssistant && (\n        <div style={{ marginTop: 20 }}>\n          <button onClick={copyCodeToClipboard}>Copy Code</button>\n          {copySuccess && <span style={{ marginLeft: 10, color: 'green' }}>{copySuccess}</span>}\n\n          <pre style={{ padding: 15, background: '#fff', color: '#000', whiteSpace: 'pre-wrap', border: '1px solid #ccc', marginTop: 10 }}>\n            {lastAssistant.content}\n          </pre>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}