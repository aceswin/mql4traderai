{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[messages,setMessages]=useState(()=>{const saved=localStorage.getItem('chatMessages');return saved?JSON.parse(saved):[{role:'system',content:\"You are an MQL4 coding expert helping the user build a complete Expert Advisor (.mq4). The user will describe a trading strategy or problem, and your job is to output clean, working code and assist them until the EA is complete.\\n\\nInstructions:\\n- Include OnInit(), OnDeinit(), and OnTick()\\n- Include risk management and code comments\\n- If there's a known issue (like OrderSend error 130), explain how to fix it\\n- Provide clear explanations **above** the code, and output the EA code in plain text without markdown or triple backticks\\n- Support the user across multiple follow-ups \\u2014 revise, debug, and improve until it\\u2019s ready to go\"}];});const[userInput,setUserInput]=useState('');const[loading,setLoading]=useState(false);const[error,setError]=useState('');const[copySuccess,setCopySuccess]=useState('');useEffect(()=>{localStorage.setItem('chatMessages',JSON.stringify(messages));},[messages]);const sendMessage=async function(){let customInput=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;const input=customInput!==null?customInput:userInput;if(!input.trim())return;setLoading(true);setError('');const updatedMessages=[...messages,{role:'user',content:input}];setUserInput('');try{const res=await fetch('http://localhost:4000/api/generate-ea',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({messages:updatedMessages})});const data=await res.json();if(data.error){setError(data.error);}else{const assistantMsg={role:'assistant',content:data.eaCode};const updatedAllMessages=[...updatedMessages,assistantMsg];setMessages(updatedAllMessages);}}catch(err){setError('Something went wrong.');}finally{setLoading(false);}};const resetSession=()=>{const initialSystemMessage={role:'system',content:\"You are an MQL4 coding expert helping the user build a complete Expert Advisor (.mq4). The user will describe a trading strategy or problem, and your job is to output clean, working code and assist them until the EA is complete.\\n\\nInstructions:\\n- Include OnInit(), OnDeinit(), and OnTick()\\n- Include risk management and code comments\\n- If there's a known issue (like OrderSend error 130), explain how to fix it\\n- Provide clear explanations **above** the code, and output the EA code in plain text without markdown or triple backticks\\n- Support the user across multiple follow-ups \\u2014 revise, debug, and improve until it\\u2019s ready to go\"};setMessages([initialSystemMessage]);localStorage.removeItem('chatMessages');setUserInput('');setError('');};const downloadCode=()=>{const lastAssistant=messages.findLast(msg=>msg.role==='assistant');if(!lastAssistant)return;const blob=new Blob([lastAssistant.content],{type:'text/plain'});const url=URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;link.download='MyExpertAdvisor.mq4';document.body.appendChild(link);link.click();document.body.removeChild(link);};const lastAssistant=messages.findLast(msg=>msg.role==='assistant');const copyCodeToClipboard=()=>{if(!(lastAssistant!==null&&lastAssistant!==void 0&&lastAssistant.content))return;navigator.clipboard.writeText(lastAssistant.content).then(()=>{setCopySuccess('Copied!');setTimeout(()=>setCopySuccess(''),1500);}).catch(err=>{console.error('Failed to copy code:',err);setCopySuccess('Failed to copy');});};return/*#__PURE__*/_jsxs(\"div\",{style:{background:'#fff',color:'#000',padding:20,fontFamily:'monospace'},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"MQL4TraderAI EA Builder\"}),/*#__PURE__*/_jsxs(\"div\",{style:{background:'#eef',padding:15,marginBottom:20},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCA1 Tips for Best Results\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Describe your EA logic step-by-step. Mention entries, exits, indicators, and timeframe.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Say if it's for scalping, swing trading, news filtering, etc.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"If using indicators (e.g. RSI, MACD), include parameters.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"If there's an error in the compiler or strategy tester (like \\\"OrderSend Error 130\\\"), copy the error into the chat \\u2014 the AI will help fix it.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"MQL4TraderAI is not yet perfect and can make mistakes. Please be patient and work with AI back and forth to get the best results.\"})]})]}),/*#__PURE__*/_jsx(\"textarea\",{value:userInput,onChange:e=>setUserInput(e.target.value),rows:4,placeholder:\"Describe your EA strategy or request help with your existing code...\",style:{width:'100%',padding:10}}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:10},children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>sendMessage(),disabled:loading,children:loading?'Thinking...':'Generate EA code'}),/*#__PURE__*/_jsx(\"button\",{onClick:resetSession,style:{marginLeft:10},children:\"Reset Session\"}),/*#__PURE__*/_jsx(\"button\",{onClick:downloadCode,style:{marginLeft:10},disabled:!lastAssistant,children:\"Download MQ4\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{style:{color:'red',marginTop:20},children:error}),lastAssistant&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:20},children:[/*#__PURE__*/_jsx(\"button\",{onClick:copyCodeToClipboard,children:\"Copy Code\"}),copySuccess&&/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:10,color:'green'},children:copySuccess}),/*#__PURE__*/_jsx(\"pre\",{style:{padding:15,background:'#fff',color:'#000',whiteSpace:'pre-wrap',border:'1px solid #ccc',marginTop:10},children:lastAssistant.content})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","App","messages","setMessages","saved","localStorage","getItem","JSON","parse","role","content","userInput","setUserInput","loading","setLoading","error","setError","copySuccess","setCopySuccess","setItem","stringify","sendMessage","customInput","arguments","length","undefined","input","trim","updatedMessages","res","fetch","method","headers","body","data","json","assistantMsg","eaCode","updatedAllMessages","err","resetSession","initialSystemMessage","removeItem","downloadCode","lastAssistant","findLast","msg","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","appendChild","click","removeChild","copyCodeToClipboard","navigator","clipboard","writeText","then","setTimeout","catch","console","style","background","color","padding","fontFamily","children","marginBottom","value","onChange","e","target","rows","placeholder","width","marginTop","onClick","disabled","marginLeft","whiteSpace","border"],"sources":["C:/Users/JORDAN/Desktop/mql4traderai/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [messages, setMessages] = useState(() => {\n    const saved = localStorage.getItem('chatMessages');\n    return saved ? JSON.parse(saved) : [\n      {\n        role: 'system',\n        content: `You are an MQL4 coding expert helping the user build a complete Expert Advisor (.mq4). The user will describe a trading strategy or problem, and your job is to output clean, working code and assist them until the EA is complete.\n\nInstructions:\n- Include OnInit(), OnDeinit(), and OnTick()\n- Include risk management and code comments\n- If there's a known issue (like OrderSend error 130), explain how to fix it\n- Provide clear explanations **above** the code, and output the EA code in plain text without markdown or triple backticks\n- Support the user across multiple follow-ups — revise, debug, and improve until it’s ready to go`\n      }\n    ];\n  });\n\n  const [userInput, setUserInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [copySuccess, setCopySuccess] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem('chatMessages', JSON.stringify(messages));\n  }, [messages]);\n\n  const sendMessage = async (customInput = null) => {\n    const input = customInput !== null ? customInput : userInput;\n    if (!input.trim()) return;\n    setLoading(true);\n    setError('');\n\n    const updatedMessages = [...messages, { role: 'user', content: input }];\n    setUserInput('');\n\n    try {\n      const res = await fetch('http://localhost:4000/api/generate-ea', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ messages: updatedMessages })\n      });\n\n      const data = await res.json();\n\n      if (data.error) {\n        setError(data.error);\n      } else {\n        const assistantMsg = { role: 'assistant', content: data.eaCode };\n        const updatedAllMessages = [...updatedMessages, assistantMsg];\n        setMessages(updatedAllMessages);\n      }\n    } catch (err) {\n      setError('Something went wrong.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const resetSession = () => {\n    const initialSystemMessage = {\n      role: 'system',\n      content: `You are an MQL4 coding expert helping the user build a complete Expert Advisor (.mq4). The user will describe a trading strategy or problem, and your job is to output clean, working code and assist them until the EA is complete.\n\nInstructions:\n- Include OnInit(), OnDeinit(), and OnTick()\n- Include risk management and code comments\n- If there's a known issue (like OrderSend error 130), explain how to fix it\n- Provide clear explanations **above** the code, and output the EA code in plain text without markdown or triple backticks\n- Support the user across multiple follow-ups — revise, debug, and improve until it’s ready to go`\n    };\n    setMessages([initialSystemMessage]);\n    localStorage.removeItem('chatMessages');\n    setUserInput('');\n    setError('');\n  };\n\n  const downloadCode = () => {\n    const lastAssistant = messages.findLast(msg => msg.role === 'assistant');\n    if (!lastAssistant) return;\n    const blob = new Blob([lastAssistant.content], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'MyExpertAdvisor.mq4';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const lastAssistant = messages.findLast(msg => msg.role === 'assistant');\n\n  const copyCodeToClipboard = () => {\n    if (!lastAssistant?.content) return;\n\n    navigator.clipboard.writeText(lastAssistant.content)\n      .then(() => {\n        setCopySuccess('Copied!');\n        setTimeout(() => setCopySuccess(''), 1500);\n      })\n      .catch(err => {\n        console.error('Failed to copy code:', err);\n        setCopySuccess('Failed to copy');\n      });\n  };\n\n  return (\n    <div style={{ background: '#fff', color: '#000', padding: 20, fontFamily: 'monospace' }}>\n      <h1>MQL4TraderAI EA Builder</h1>\n      <div style={{ background: '#eef', padding: 15, marginBottom: 20 }}>\n        <h3>💡 Tips for Best Results</h3>\n        <ul>\n          <li>Describe your EA logic step-by-step. Mention entries, exits, indicators, and timeframe.</li>\n          <li>Say if it's for scalping, swing trading, news filtering, etc.</li>\n          <li>If using indicators (e.g. RSI, MACD), include parameters.</li>\n          <li>If there's an error in the compiler or strategy tester (like \"OrderSend Error 130\"), copy the error into the chat — the AI will help fix it.</li>\n          <li>MQL4TraderAI is not yet perfect and can make mistakes. Please be patient and work with AI back and forth to get the best results.</li>\n        </ul>\n      </div>\n\n      <textarea\n        value={userInput}\n        onChange={(e) => setUserInput(e.target.value)}\n        rows={4}\n        placeholder=\"Describe your EA strategy or request help with your existing code...\"\n        style={{ width: '100%', padding: 10 }}\n      ></textarea>\n\n      <div style={{ marginTop: 10 }}>\n        <button onClick={() => sendMessage()} disabled={loading}>\n          {loading ? 'Thinking...' : 'Generate EA code'}\n        </button>\n        <button onClick={resetSession} style={{ marginLeft: 10 }}>\n          Reset Session\n        </button>\n        <button onClick={downloadCode} style={{ marginLeft: 10 }} disabled={!lastAssistant}>\n          Download MQ4\n        </button>\n      </div>\n\n      {error && <div style={{ color: 'red', marginTop: 20 }}>{error}</div>}\n\n      {lastAssistant && (\n        <div style={{ marginTop: 20 }}>\n          <button onClick={copyCodeToClipboard}>Copy Code</button>\n          {copySuccess && <span style={{ marginLeft: 10, color: 'green' }}>{copySuccess}</span>}\n\n          <pre style={{ padding: 15, background: '#fff', color: '#000', whiteSpace: 'pre-wrap', border: '1px solid #ccc', marginTop: 10 }}>\n            {lastAssistant.content}\n          </pre>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}