{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\JORDAN\\\\Desktop\\\\mql4traderai\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _lastAssistant$conten;\n  const [messages, setMessages] = useState([{\n    role: 'system',\n    content: `You are an MQL4 coding expert. The user will describe a trading strategy in plain English, and your job is to output clean MQL4 Expert Advisor (.mq4) code that matches the strategy.\n\nInclude:\n- OnInit(), OnDeinit(), and OnTick()\n- Risk management\n- Comments in the code\n- Provide a short explanation first, then output the raw code only — no markdown formatting.`\n  }]);\n  const [userInput, setUserInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const sendMessage = async (customInput = null) => {\n    const input = customInput !== null ? customInput : userInput;\n    if (!input.trim()) return;\n    setLoading(true);\n    setError('');\n    const updatedMessages = [...messages, {\n      role: 'user',\n      content: input\n    }];\n    setUserInput('');\n    try {\n      const res = await fetch('http://localhost:4000/api/generate-ea', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          messages: updatedMessages\n        })\n      });\n      const data = await res.json();\n      if (data.error) {\n        setError(data.error);\n      } else {\n        const assistantMsg = {\n          role: 'assistant',\n          content: data.eaCode\n        };\n        const updatedAllMessages = [...updatedMessages, assistantMsg];\n        setMessages(updatedAllMessages);\n      }\n    } catch (err) {\n      setError('Something went wrong.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const resetSession = () => {\n    setMessages([{\n      role: 'system',\n      content: `You are an MQL4 coding expert. The user will describe a trading strategy in plain English, and your job is to output clean MQL4 Expert Advisor (.mq4) code that matches the strategy.\n\nInclude:\n- OnInit(), OnDeinit(), and OnTick()\n- Risk management\n- Comments in the code\n- Provide a short explanation first, then output the raw code only — no markdown formatting.`\n    }]);\n    setUserInput('');\n    setError('');\n  };\n  const downloadCode = () => {\n    const lastAssistant = messages.findLast(msg => msg.role === 'assistant');\n    if (!lastAssistant) return;\n    const blob = new Blob([lastAssistant.content], {\n      type: 'text/plain'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'MyExpertAdvisor.mq4';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  const lastAssistant = messages.findLast(msg => msg.role === 'assistant');\n  const explanation = lastAssistant === null || lastAssistant === void 0 ? void 0 : (_lastAssistant$conten = lastAssistant.content.split(/(\\/\\/\\+.*MyEA\\.mq4.*\\n)/)[0]) === null || _lastAssistant$conten === void 0 ? void 0 : _lastAssistant$conten.trim();\n  const code = lastAssistant !== null && lastAssistant !== void 0 && lastAssistant.content.includes('//+') ? lastAssistant.content.split(/(\\/\\/\\+.*MyEA\\.mq4.*\\n)/).slice(1).join('').trim() : lastAssistant === null || lastAssistant === void 0 ? void 0 : lastAssistant.content;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: '#fff',\n      padding: 20,\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MQL4 EA Builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: userInput,\n      onChange: e => setUserInput(e.target.value),\n      rows: 4,\n      placeholder: \"Describe your EA strategy...\",\n      style: {\n        width: '100%',\n        padding: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => sendMessage(),\n        disabled: loading,\n        children: loading ? 'Thinking...' : 'Generate Code'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetSession,\n        style: {\n          marginLeft: 10\n        },\n        children: \"Reset Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: downloadCode,\n        style: {\n          marginLeft: 10\n        },\n        disabled: !code,\n        children: \"Download MQ4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginTop: 20\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }, this), explanation && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20,\n        padding: 10,\n        background: '#f0f0f0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"AI says:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: explanation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), code && /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        marginTop: 20,\n        padding: 15,\n        background: '#f5f5f5',\n        color: '#000',\n        whiteSpace: 'pre-wrap'\n      },\n      children: code\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"T7l+j1ufe3Tc0/lTT4BwISfUX2U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","_lastAssistant$conten","messages","setMessages","role","content","userInput","setUserInput","loading","setLoading","error","setError","sendMessage","customInput","input","trim","updatedMessages","res","fetch","method","headers","body","JSON","stringify","data","json","assistantMsg","eaCode","updatedAllMessages","err","resetSession","downloadCode","lastAssistant","findLast","msg","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","appendChild","click","removeChild","explanation","split","code","includes","slice","join","style","background","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","rows","placeholder","width","marginTop","onClick","disabled","marginLeft","color","whiteSpace","_c","$RefreshReg$"],"sources":["c:/Users/JORDAN/Desktop/mql4traderai/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [messages, setMessages] = useState([\n    {\n      role: 'system',\n      content: `You are an MQL4 coding expert. The user will describe a trading strategy in plain English, and your job is to output clean MQL4 Expert Advisor (.mq4) code that matches the strategy.\n\nInclude:\n- OnInit(), OnDeinit(), and OnTick()\n- Risk management\n- Comments in the code\n- Provide a short explanation first, then output the raw code only — no markdown formatting.`\n    }\n  ]);\n\n  const [userInput, setUserInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const sendMessage = async (customInput = null) => {\n    const input = customInput !== null ? customInput : userInput;\n    if (!input.trim()) return;\n    setLoading(true);\n    setError('');\n\n    const updatedMessages = [...messages, { role: 'user', content: input }];\n    setUserInput('');\n\n    try {\n      const res = await fetch('http://localhost:4000/api/generate-ea', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ messages: updatedMessages })\n      });\n\n      const data = await res.json();\n\n      if (data.error) {\n        setError(data.error);\n      } else {\n        const assistantMsg = { role: 'assistant', content: data.eaCode };\n        const updatedAllMessages = [...updatedMessages, assistantMsg];\n        setMessages(updatedAllMessages);\n      }\n    } catch (err) {\n      setError('Something went wrong.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const resetSession = () => {\n    setMessages([\n      {\n        role: 'system',\n        content: `You are an MQL4 coding expert. The user will describe a trading strategy in plain English, and your job is to output clean MQL4 Expert Advisor (.mq4) code that matches the strategy.\n\nInclude:\n- OnInit(), OnDeinit(), and OnTick()\n- Risk management\n- Comments in the code\n- Provide a short explanation first, then output the raw code only — no markdown formatting.`\n      }\n    ]);\n    setUserInput('');\n    setError('');\n  };\n\n  const downloadCode = () => {\n    const lastAssistant = messages.findLast(msg => msg.role === 'assistant');\n    if (!lastAssistant) return;\n    const blob = new Blob([lastAssistant.content], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'MyExpertAdvisor.mq4';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const lastAssistant = messages.findLast(msg => msg.role === 'assistant');\n  const explanation = lastAssistant?.content.split(/(\\/\\/\\+.*MyEA\\.mq4.*\\n)/)[0]?.trim();\n  const code = lastAssistant?.content.includes('//+')\n    ? lastAssistant.content.split(/(\\/\\/\\+.*MyEA\\.mq4.*\\n)/).slice(1).join('').trim()\n    : lastAssistant?.content;\n\n  return (\n    <div style={{ background: '#fff', padding: 20, fontFamily: 'Arial, sans-serif' }}>\n      <h1>MQL4 EA Builder</h1>\n\n      <textarea\n        value={userInput}\n        onChange={(e) => setUserInput(e.target.value)}\n        rows={4}\n        placeholder=\"Describe your EA strategy...\"\n        style={{ width: '100%', padding: 10 }}\n      ></textarea>\n\n      <div style={{ marginTop: 10 }}>\n        <button onClick={() => sendMessage()} disabled={loading}>\n          {loading ? 'Thinking...' : 'Generate Code'}\n        </button>\n        <button onClick={resetSession} style={{ marginLeft: 10 }}>\n          Reset Session\n        </button>\n        <button onClick={downloadCode} style={{ marginLeft: 10 }} disabled={!code}>\n          Download MQ4\n        </button>\n      </div>\n\n      {error && <div style={{ color: 'red', marginTop: 20 }}>{error}</div>}\n\n      {explanation && (\n        <div style={{ marginTop: 20, padding: 10, background: '#f0f0f0' }}>\n          <strong>AI says:</strong>\n          <p>{explanation}</p>\n        </div>\n      )}\n\n      {code && (\n        <pre style={{ marginTop: 20, padding: 15, background: '#f5f5f5', color: '#000', whiteSpace: 'pre-wrap' }}>\n          {code}\n        </pre>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}