{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\JORDAN\\\\Desktop\\\\mql4traderai\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([{\n    role: 'system',\n    content: `You are an MQL4 coding expert. The user will describe a trading strategy in plain English, and your job is to output complete, clean MQL4 Expert Advisor (.mq4) code that matches the strategy.\n\nInclude:\n- OnInit(), OnDeinit(), and OnTick()\n- Risk management\n- Comments in the code\n- Only output code â€” no explanations, no markdown, no code blocks.`\n  }]);\n  const [userInput, setUserInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [code, setCode] = useState('');\n  const [error, setError] = useState('');\n  const sendMessage = async () => {\n    if (!userInput.trim()) return;\n    setLoading(true);\n    setError('');\n    const updatedMessages = [...messages, {\n      role: 'user',\n      content: userInput\n    }];\n    setMessages(updatedMessages);\n    setUserInput('');\n    try {\n      const res = await fetch('http://localhost:4000/api/generate-ea', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          messages: updatedMessages\n        })\n      });\n      const data = await res.json();\n      if (data.error) {\n        setError(data.error);\n      } else {\n        const assistantMsg = {\n          role: 'assistant',\n          content: data.eaCode\n        };\n        setMessages([...updatedMessages, assistantMsg]);\n        setCode(data.eaCode);\n      }\n    } catch (err) {\n      setError('Something went wrong.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20,\n      fontFamily: 'Arial'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83E\\uDD16 AI EA Builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"3\",\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Describe your EA strategy or enter a follow-up message...\",\n      value: userInput,\n      onChange: e => setUserInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      disabled: loading,\n      style: {\n        marginTop: 10\n      },\n      children: loading ? 'Thinking...' : 'Send to AI'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this), code && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 30\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDCE6 Current EA Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          backgroundColor: '#000',\n          color: '#0f0',\n          padding: '1rem',\n          borderRadius: 8,\n          whiteSpace: 'pre-wrap',\n          wordBreak: 'break-word',\n          fontSize: '13px'\n        },\n        children: code\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QDeRhP+Iy2fjAVY1tQ8/4TA6Q3M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","messages","setMessages","role","content","userInput","setUserInput","loading","setLoading","code","setCode","error","setError","sendMessage","trim","updatedMessages","res","fetch","method","headers","body","JSON","stringify","data","json","assistantMsg","eaCode","err","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","width","placeholder","value","onChange","e","target","onClick","disabled","marginTop","color","backgroundColor","borderRadius","whiteSpace","wordBreak","fontSize","_c","$RefreshReg$"],"sources":["c:/Users/JORDAN/Desktop/mql4traderai/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [messages, setMessages] = useState([\n    {\n      role: 'system',\n      content: `You are an MQL4 coding expert. The user will describe a trading strategy in plain English, and your job is to output complete, clean MQL4 Expert Advisor (.mq4) code that matches the strategy.\n\nInclude:\n- OnInit(), OnDeinit(), and OnTick()\n- Risk management\n- Comments in the code\n- Only output code â€” no explanations, no markdown, no code blocks.`\n    }\n  ]);\n\n  const [userInput, setUserInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [code, setCode] = useState('');\n  const [error, setError] = useState('');\n\n  const sendMessage = async () => {\n    if (!userInput.trim()) return;\n    setLoading(true);\n    setError('');\n\n    const updatedMessages = [\n      ...messages,\n      { role: 'user', content: userInput }\n    ];\n\n    setMessages(updatedMessages);\n    setUserInput('');\n\n    try {\n      const res = await fetch('http://localhost:4000/api/generate-ea', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ messages: updatedMessages })\n      });\n\n      const data = await res.json();\n\n      if (data.error) {\n        setError(data.error);\n      } else {\n        const assistantMsg = { role: 'assistant', content: data.eaCode };\n        setMessages([...updatedMessages, assistantMsg]);\n        setCode(data.eaCode);\n      }\n    } catch (err) {\n      setError('Something went wrong.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ padding: 20, fontFamily: 'Arial' }}>\n      <h1>ðŸ¤– AI EA Builder</h1>\n\n      <textarea\n        rows=\"3\"\n        style={{ width: '100%' }}\n        placeholder=\"Describe your EA strategy or enter a follow-up message...\"\n        value={userInput}\n        onChange={(e) => setUserInput(e.target.value)}\n      />\n      <button onClick={sendMessage} disabled={loading} style={{ marginTop: 10 }}>\n        {loading ? 'Thinking...' : 'Send to AI'}\n      </button>\n\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n\n      {code && (\n        <div style={{ marginTop: 30 }}>\n          <h2>ðŸ“¦ Current EA Code</h2>\n          <pre\n            style={{\n              backgroundColor: '#000',\n              color: '#0f0',\n              padding: '1rem',\n              borderRadius: 8,\n              whiteSpace: 'pre-wrap',\n              wordBreak: 'break-word',\n              fontSize: '13px'\n            }}\n          >\n            {code}\n          </pre>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}