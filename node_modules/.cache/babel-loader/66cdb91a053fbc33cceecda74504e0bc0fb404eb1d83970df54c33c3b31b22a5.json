{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\JORDAN\\\\Desktop\\\\mql4traderai\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([{\n    role: 'system',\n    content: `You are an MQL4 coding expert. The user will describe a trading strategy in plain English, and your job is to output clean MQL4 Expert Advisor (.mq4) code that matches the strategy.\n\nInclude:\n- OnInit(), OnDeinit(), and OnTick()\n- Risk management\n- Comments in the code\n- Only output code — no explanations, no markdown, no code blocks.`\n  }]);\n  const [userInput, setUserInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const sendMessage = async (customInput = null) => {\n    const input = customInput !== null ? customInput : userInput;\n    if (!input.trim()) return;\n    setLoading(true);\n    setError('');\n    const updatedMessages = [...messages, {\n      role: 'user',\n      content: input\n    }];\n    setUserInput('');\n    try {\n      const res = await fetch('http://localhost:4000/api/generate-ea', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          messages: updatedMessages\n        })\n      });\n      const data = await res.json();\n      if (data.error) {\n        setError(data.error);\n      } else {\n        const assistantMsg = {\n          role: 'assistant',\n          content: data.eaCode\n        };\n        const updatedAllMessages = [...updatedMessages, assistantMsg];\n        setMessages(updatedAllMessages);\n      }\n    } catch (err) {\n      setError('Something went wrong.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const resetSession = () => {\n    setMessages([{\n      role: 'system',\n      content: `You are an MQL4 coding expert. The user will describe a trading strategy in plain English, and your job is to output clean MQL4 Expert Advisor (.mq4) code that matches the strategy.\n\nInclude:\n- OnInit(), OnDeinit(), and OnTick()\n- Risk management\n- Comments in the code\n- Only output code — no explanations, no markdown, no code blocks.`\n    }]);\n    setUserInput('');\n    setError('');\n  };\n  const downloadCode = () => {\n    const lastAssistant = messages.findLast(msg => msg.role === 'assistant');\n    if (!lastAssistant) return;\n    const blob = new Blob([lastAssistant.content], {\n      type: 'text/plain'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'MyExpertAdvisor.mq4';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  const lastAssistant = messages.findLast(msg => msg.role === 'assistant');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: '#fff',\n      color: '#000',\n      padding: 20,\n      fontFamily: 'monospace'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MQL4 EA Builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: userInput,\n      onChange: e => setUserInput(e.target.value),\n      rows: 4,\n      placeholder: \"Describe your EA strategy...\",\n      style: {\n        width: '100%',\n        padding: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => sendMessage(),\n        disabled: loading,\n        children: loading ? 'Thinking...' : 'Generate EA'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetSession,\n        style: {\n          marginLeft: 10\n        },\n        children: \"Reset Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: downloadCode,\n        style: {\n          marginLeft: 10\n        },\n        disabled: !lastAssistant,\n        children: \"Download MQ4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginTop: 20\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this), lastAssistant && /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        marginTop: 20,\n        padding: 15,\n        background: '#f5f5f5',\n        whiteSpace: 'pre-wrap',\n        color: '#000'\n      },\n      children: lastAssistant.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4M3g/bAF8zxqy5BMs7Ww3v1Is0U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","messages","setMessages","role","content","userInput","setUserInput","loading","setLoading","error","setError","sendMessage","customInput","input","trim","updatedMessages","res","fetch","method","headers","body","JSON","stringify","data","json","assistantMsg","eaCode","updatedAllMessages","err","resetSession","downloadCode","lastAssistant","findLast","msg","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","appendChild","click","removeChild","style","background","color","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","rows","placeholder","width","marginTop","onClick","disabled","marginLeft","whiteSpace","_c","$RefreshReg$"],"sources":["c:/Users/JORDAN/Desktop/mql4traderai/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [messages, setMessages] = useState([\n    {\n      role: 'system',\n      content: `You are an MQL4 coding expert. The user will describe a trading strategy in plain English, and your job is to output clean MQL4 Expert Advisor (.mq4) code that matches the strategy.\n\nInclude:\n- OnInit(), OnDeinit(), and OnTick()\n- Risk management\n- Comments in the code\n- Only output code — no explanations, no markdown, no code blocks.`\n    }\n  ]);\n\n  const [userInput, setUserInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const sendMessage = async (customInput = null) => {\n    const input = customInput !== null ? customInput : userInput;\n    if (!input.trim()) return;\n    setLoading(true);\n    setError('');\n\n    const updatedMessages = [...messages, { role: 'user', content: input }];\n    setUserInput('');\n\n    try {\n      const res = await fetch('http://localhost:4000/api/generate-ea', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ messages: updatedMessages })\n      });\n\n      const data = await res.json();\n\n      if (data.error) {\n        setError(data.error);\n      } else {\n        const assistantMsg = { role: 'assistant', content: data.eaCode };\n        const updatedAllMessages = [...updatedMessages, assistantMsg];\n        setMessages(updatedAllMessages);\n      }\n    } catch (err) {\n      setError('Something went wrong.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const resetSession = () => {\n    setMessages([\n      {\n        role: 'system',\n        content: `You are an MQL4 coding expert. The user will describe a trading strategy in plain English, and your job is to output clean MQL4 Expert Advisor (.mq4) code that matches the strategy.\n\nInclude:\n- OnInit(), OnDeinit(), and OnTick()\n- Risk management\n- Comments in the code\n- Only output code — no explanations, no markdown, no code blocks.`\n      }\n    ]);\n    setUserInput('');\n    setError('');\n  };\n\n  const downloadCode = () => {\n    const lastAssistant = messages.findLast(msg => msg.role === 'assistant');\n    if (!lastAssistant) return;\n    const blob = new Blob([lastAssistant.content], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'MyExpertAdvisor.mq4';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const lastAssistant = messages.findLast(msg => msg.role === 'assistant');\n\n  return (\n    <div style={{ background: '#fff', color: '#000', padding: 20, fontFamily: 'monospace' }}>\n      <h1>MQL4 EA Builder</h1>\n\n      <textarea\n        value={userInput}\n        onChange={(e) => setUserInput(e.target.value)}\n        rows={4}\n        placeholder=\"Describe your EA strategy...\"\n        style={{ width: '100%', padding: 10 }}\n      ></textarea>\n\n      <div style={{ marginTop: 10 }}>\n        <button onClick={() => sendMessage()} disabled={loading}>\n          {loading ? 'Thinking...' : 'Generate EA'}\n        </button>\n        <button onClick={resetSession} style={{ marginLeft: 10 }}>\n          Reset Session\n        </button>\n        <button onClick={downloadCode} style={{ marginLeft: 10 }} disabled={!lastAssistant}>\n          Download MQ4\n        </button>\n      </div>\n\n      {error && <div style={{ color: 'red', marginTop: 20 }}>{error}</div>}\n\n      {lastAssistant && (\n        <pre style={{ marginTop: 20, padding: 15, background: '#f5f5f5', whiteSpace: 'pre-wrap', color: '#000' }}>\n          {lastAssistant.content}\n        </pre>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}